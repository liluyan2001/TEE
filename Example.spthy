rule Register_pk:           // Registering a public key
    [ Fr(~private_key) ]
  --[ KeyReg( $A ) ]->
    [ 
      !Get_private_key($A, ~private_key), 
      !Get_public_key($A, pk(~private_key)),
      Out(pk(~private_key))
    ]

rule Reveal_private_key:    // Revealing private key
    [ !Get_private_key(A, private_key) ]
  --[ PrivateKeyRevealed(A) ]->
    [ Out(private_key) ]


// ****************** Roles ******************
rule Init_Attestation_DatabPVe:       //meaurements
    [ Fr(~SML) ]
  --[ ]->
    [ !Get_expected_SML(~SML), Out(~SML) ]

rule Init_VF:
    [ 
      Fr(~DH_sk_VF),
      !Get_private_key($VF, private_key_vf),
      !Get_public_key($Coordinator, coordinator_public_key)
    ]
  --[ Create($VF) ]->
    [ Verifier_0($VF, private_key_vf, ~DH_sk_VF, $Coordinator, coordinator_public_key) ]

rule Init_PV:
    [ 
      Fr(~DH_sk_PV),
      !Get_private_key($PV, private_key_pv),
      !Get_public_key($Coordinator, coordinator_public_key)
    ]
  --[ Create($PV) ]->
    [ Prover_0($PV, private_key_pv, ~DH_sk_PV,  $Coordinator, coordinator_public_key) ]

rule Init_Coordinator:
    [ 
      !Get_private_key($Coordinator, private_key_coordinator)
    ]
  --[ Create($Coordinator) ]->
    [ Coordinator_0($Coordinator, private_key_coordinator) ]

// ****************** Secure Channel Used to Register Certificate ******************
rule ChanOut_S:
    [ OutS($A, $B, m) ]
  --[ OutS($A, $B, m) ]->
    [ !Sec($A, $B, m) ]

rule ChanIn_S:
    [ !Sec($A, $B, m) ]
  --[ InS($A, $B, m) ]->
    [ InS($A, $B, m) ]

// ****************** Register ******************
/* 

*/
rule VF_RG_01:
    [
      Verifier_0($VF, private_key_vf, ~DH_sk_VF, $Coordinator, coordinator_public_key)
    ]
  --[  
        RegisterStarted_VF($VF,$Coordinator,pk(private_key_vf)),
        Step1_VF($VF,$Coordinator,pk(private_key_vf))
        // Step1_VF(VF,Coordinator,pk(private_key_vf), pk(DH_sk_VF))
    ]->
    [ 
        Verifier_01($VF, private_key_vf, ~DH_sk_VF, $Coordinator, coordinator_public_key),
        OutS($VF, $Coordinator, <$VF, pk(private_key_vf)>)
    ]

rule PV_RG_01:
    [ 
      Prover_0($PV, private_key_pv, ~DH_sk_PV,  $Coordinator, coordinator_public_key)
    ]
  --[ 
        RegisterStarted_PV($PV,$Coordinator,pk(private_key_pv)),
        Step1_PV($PV,$Coordinator,pk(private_key_pv))
        // Step1_PV(PV,,Coordinator,pk(private_key_pv),pk(DH_sk_PV))
    ]->
    [ 
        Prover_01($PV, private_key_pv, ~DH_sk_PV, $Coordinator, coordinator_public_key),
        OutS($PV, $Coordinator, <$PV, pk(private_key_pv)>)
    ]

rule CD_RG_01:
    let
        ID_PK_VF = <$VF, vf_public_key>
        ID_PK_PV = <$PV, pv_public_key>
        coordinator_public_key = pk(private_key_coordinator)
        root_cert = <$Coordinator, coordinator_public_key, sign(<$Coordinator, coordinator_public_key>, private_key_coordinator)> // <$ID, PK, sign(<$ID,PK>,SK_CA))>
        vf_cert = <ID_PK_VF, sign(ID_PK_VF,private_key_coordinator)>
        pv_cert = <ID_PK_PV, sign(ID_PK_PV,private_key_coordinator)>
    in
    [
        Coordinator_0($Coordinator, private_key_coordinator)
        InS($VF, $Coordinator, ID_PK_VF),
        InS($PV, $Coordinator, ID_PK_PV),
    ]
  --[ 
        Step2($Coordinator,$PV,$VF,root_cert,vf_cert,pv_cert)
    ]->
    [ 
        OutS(<pv_cert,root_cert>),
        OutS(<vf_cert,root_cert>),
        Coordinator_01($Coordinator, private_key_coordinator, $PV, pv_public_key, $VF, vf_public_key)
    ]

rule VF_RG_02:
    let
        vf_cert = <$VF, vf_public_key, vfCertSignCoordinator>
        root_cert = <$Coordinator, coordinator_public_key, rootCertSignCoordinator>
        k_dh =(DH_pk_PV)^DH_sk_VF
    in
    [   
      Verifier_01($VF, private_key_vf, ~DH_sk_VF, $Coordinator, coordinator_public_key),
      InS(<vf_cert,root_cert>)
     ]
    --[ 
        Eq(verify(signCoordinator,<$VF,vf_public_key>,coordinator_public_key),true),
        Eq(verify(rootCertSignCoordinator,<$Coordinator,coordinator_public_key>,coordinator_public_key),true),
        Step3_VF($VF,$Coordinator,k_dh,root_cert,vf_cert)
    ]->
    [ 
        Verifier_02($VF,k_dh,vf_cert,root_cert, private_key_vf, ~DH_sk_VF, $Coordinator, coordinator_public_key,)
    ]

